#! /bin/bash

#version-composer
#by Julian Sangillo
#Returns a new version identifier based on the latest existing tag in your current branch.

REVISION_PATTERN="$1";
DEFAULT_TYPE="$2";
STABLE_BRANCH="$3";
TEST_BRANCH="$4";
DEV_BRANCH="$5";
STABLE_TAG="$6";
TEST_TAG="$7";
DEV_TAG="$8";

if [ "$#" -ne 7 ]; then
	log "Illegal number of arguments.";
	exit 1
fi

cat resources/ascii-title.txt >&2;

log "Starting ...";

initialize-git;

LATEST_VERSION=$(get-latest-version);
RELEASE_TAG=$(choose-release-tag -s $STABLE_BRANCH -S $STABLE_TAG -t $TEST_BRANCH -T $TEST_TAG -d $DEV_BRANCH -D $DEV_TAG) || exit $?;

if [ "$RELEASE_TAG" = "$DEV_TAG" ]; then
	if ! [ -z "$LATEST_VERSION" ]; then
		REVISION_TYPE=$(get-revision-type $LATEST_VERSION $DEFAULT_TYPE) || exit $?;
		RAW_VERSION=$(calculate-revision $REVISION_PATTERN $LATEST_VERSION $REVISION_TYPE) || exit $?;
	else
		RAW_VERSION=$(calculate-revision -i $REVISION_PATTERN);
	fi
else
	RAW_VERSION=$LATEST_VERSION;
fi

VERSION=$(join . $RAW_VERSION $RELEASE_TAG);

if [ "$RELEASE_TAG" = "$STABLE_TAG" ]; then
	IS_PRERELEASE='false';
else
	IS_PRERELEASE='true';
fi

echo "::set-output name=version::$VERSION";
echo "::set-output name=raw_version::$RAW_VERSION";
echo "::set-output name=is_prerelease::$IS_PRERELEASE";

log "Success";

exit 0