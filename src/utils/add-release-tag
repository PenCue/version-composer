#! /bin/bash

#add-release-tag
#by Julian Sangillo
#Append a release tag to the end of the version and return it based on the current branch.

showHelp() {
	echo "Usage: add-release-tag [options...] <raw-version>";
	echo "Append a release tag to the end of the version and return it based on the current branch.";
	echo "	";
	echo "Required arguments: ";
	echo "	raw-version	The project's version without any release tag";
	echo "			appended to the end. The format should be a";
	echo "			set of numbers only separated by periods.";
	echo "			Example1: 3.1.5";
	echo "			Example2: 6.0.3.20";
	echo "	";
	echo "Options: ";
	echo "	-s	Sets the reference to your stable branch to the string";
	echo "		provided. Default is 'master'.";
	echo "	-t	Sets the reference to your test branch to the string";
	echo "		provided. Default is 'test'.";
	echo "	-d	Sets the reference to your dev branch to the string";
	echo "		provided. Default is 'develop'.";
	echo "	-S	Provide the release tag for a version on a stable branch.";
	echo "		Default means no release tag.";
	echo "	-T	Provide the release tag for a version on a test branch.";
	echo "		Default is 'TEST'.";
	echo "	-D	Provide the release tag for a version on a dev branch.";
	echo "		Default is 'DEVELOP'."
} >&2

STABLE_BRANCH='master';
TEST_BRANCH='test';
DEV_BRANCH='develop';
STABLE_TAG='';
TEST_TAG='TEST';
DEV_TAG='DEVELOP';

while getopts ":s:t:d:S:T:D:" opt; do
	case "${opt}" in
		s) STABLE_BRANCH=$OPTARG ;;
		t) TEST_BRANCH=$OPTARG ;;
		d) DEV_BRANCH=$OPTARG ;;
		S) STABLE_TAG=$OPTARG ;;
		T) TEST_TAG=$OPTARG ;;
		D) DEV_TAG=$OPTARG ;;
		*)
			showHelp;
			exit 1
			;;
	esac
done
shift $((OPTIND-1));

if [ "$#" -ne 1 ]; then
	log "Could not add release tag! Illegal number of arguments.";
	echo "	" >&2;
	showHelp;
	exit 1
fi

RAW_VERSION="$1";

if ! [[ "$RAW_VERSION" =~ ^[0-9]+(\.[0-9]+)*$ ]]; then
	log "Could not add release tag! The raw version '$RAW_VERSION' is invalid.";
	echo "	" >&2;
	showHelp;
	exit 16
fi

log "stable-branch = $STABLE_BRANCH";
log "test-branch = $TEST_BRANCH";
log "dev-branch = $DEV_BRANCH";
log "stable-tag = $STABLE_TAG";
log "test-tag = $TEST_TAG";
log "dev-tag = $DEV_TAG";
log "raw-version = $RAW_VERSION";

. join-on-delim;

fetchCurrentBranch() {
	echo "$(git branch --show-current)"
}

chooseCurrentTag() {
	log 'Choosing current tag ...';

	local branch="$1";
	
	if [ "$branch" = "$DEV_BRANCH" ]; then
		local tag="$DEV_TAG";
	elif [ "$branch" = "$TEST_BRANCH" ]; then
		local tag="$TEST_TAG";
	elif [ "$branch" = "$STABLE_BRANCH" ]; then
		local tag="$STABLE_TAG";
	else
		log "Could not add release tag! Unknown branch '$branch'";
		exit 32
	fi
	
	log "tag = $tag";
	
	echo $tag
}

addReleaseTag() {
	log 'Adding release tag ...';

	BRANCH="$(fetchCurrentBranch)" || exit $?;
	log "Current branch = $BRANCH";
	
	TAG="$(chooseCurrentTag $BRANCH)" || exit $?;
	
	echo $(join . $RAW_VERSION $TAG)
}

VERSION="$(addReleaseTag)" || exit $?;

log 'Release tag added successfully';
log "Version = $VERSION";

echo $VERSION;
exit 0